/**

Скетч датчика движения XYC-WB-DC с программной задержкой отключения

   ******************************
    ARDUINO      XYC-WB-DC
      5V    -->     +
      GND   -->     -
      D4    -->     o
   ******************************

*/

#define PIR_SENS_DIGITAL_IN_PIN 4  // Создание макроопределения(PIR_SENS_DIGITAL_IN_PIN) с значением 4(цифровой пин4)
#define PAUSE_TIME_MILLIS 30000  // Создание макроопределения(PAUSE_TIME_MILLIS) с значением хххх(милисекунды) / время работы таймера зажержки

unsigned long switchTimeMillis;  // Определение переменной(switchTimeMillis) для хранения промежуточного значения для таймера задержки с типом unsigned long(положительные целые числа в от 0 до 4 294 967 295)
boolean tripped;  // Определение переменной(tripped) для записи значения с цифрового пина 4(выход микроволнового датчика(движение(1)/нет движения(0)) с типом boolean(логический тип данных, принимает одно из двух значений true или false (1 или 0)//просто для экономии памяти

//   Флаги для дополнительной логики
boolean flag = 0;  // Определение переменной(flag) для хранения значения состояния цифрового пина 4(фиксация начала "движение(1)" / фиксация начала "нет движения(0)", тип boolean
boolean flag2 = 0;  // Определение переменной(flag2) для хранения значения состояния таймера задержки (таймер работает(1) / таймер не работает(0), тип boolean
boolean flag3 = 0;  // Определение переменной(flag3) для хранения значения о фиксации состояния на цифровом пине во время работы таймера задержки (0 - фиксация "нет движения(0)", 1 - фиксация "движение(1)"), тип boolean

void setup() {   // запуск функции настройки, выполняется один раз при запуске или перезагрузке МК
  Serial.begin(115200);   //Инициализация последовательного соединение со скоростью передачи данных 115200 бод
  pinMode(PIR_SENS_DIGITAL_IN_PIN, INPUT);   //установка режима работы цифрового пина 4 - вход

}

void loop() {   // запуск функции основного цикла
  tripped = digitalRead(PIR_SENS_DIGITAL_IN_PIN);   // запись значения в переменную tripped считанного с цифрового пина 4

//   Выключение таймера задержки
  if (millis() > switchTimeMillis) {   // Если число в millis больше чем число в switchTimeMillis (millis - количество миллисекунд с момента начала выполнения программы, сбрасывается на ноль из-за переполнения значения, в среднем 50 дней)
    flag2 = 0;  // выполнить сброс триггера состояния таймера задержки (false)
    flag3 = 0;  // выполнить сброс триггера состояния цифрового пина(4) во время работы таймера задержки (false)
  }

//   Cрабатывание датчика, начало движения, запуск таймера задержки
  if (tripped == 1 && flag == 0 && flag2 == 0 && flag3 == 0) {   // Если на цифровом пине появился высокий уровень И тригер тригер состояния цифрового пина(4) имеет значение false(0) И тригер состояния таймера задержки имеет значение false(0) И триггер состояния цифрового пина(4) во время работы таймера задержки имеет значение false(0)
    switchTimeMillis = millis() + PAUSE_TIME_MILLIS;   // выполнить запись нового значения(число) в переменную для хранения промежуточного значения таймера задержки (число = количество миллисекунд с момента начала выполнения программы + 2000 / запуск таймера
    flag = 1;  // выполнить установка значения true(1) для тригера состояния цифрового пина(4)
    flag2 = 1;   // выполнить установка значения true(1) для тригера состояния таймера задержки (включение таймера задержки)
    flag3 = 1;   // выполнить установка значения true(1) для для тригера состояния цифрового пина(4) во время работы таймера задержки

    Serial.println("MOTION");  // выполнить передачу в последовательный порт информации о фиксации начала движения - MOTION
  }

//   Окончание движения во время запущенного таймера задержки, перезапуск таймера
  if (tripped == 0 && flag == 1 && flag2 == 1 && flag3 == 1) {   // Если на цифровом пине появился низкий уровень И тригер тригер состояния цифрового пина(4) имеет значение true(1) И тригер состояния таймера задержки имеет значение true(1)(запущен таймер) И триггер состояния цифрового пина(4) во время работы таймера задержки имеет значение true(1)
    switchTimeMillis = millis() + PAUSE_TIME_MILLIS;   // выполнить запись нового значения(число) в переменную для хранения промежуточного значения таймера задержки (число = количество миллисекунд с момента начала выполнения программы + 2000 / запуск таймера
    flag = 1;  // выполнить установка значения true(1) для тригера состояния цифрового пина(4)
    flag2 = 1;  // выполнить установка значения true(1) для тригера состояния таймера задержки (включение таймера задержки)
    flag3 = 0; // выполнить установка значения false(0) для для тригера состояния цифрового пина(4) во время работы таймера задержки

  }

//   Начало движения во время запущенного таймера задержки, перезапуск таймера
  if (tripped == 1 && flag == 1 && flag2 == 1 && flag3 == 0) {   // Если на цифровом пине появился высокий уровень И тригер тригер состояния цифрового пина(4) имеет значение true(1) И тригер состояния таймера задержки имеет значение true(1)(запущен таймер) И триггер состояния цифрового пина(4) во время работы таймера задержки имеет значение false(1)
    switchTimeMillis = millis() + PAUSE_TIME_MILLIS;   // выполнить запись нового значения(число) в переменную для хранения промежуточного значения таймера задержки (число = количество миллисекунд с момента начала выполнения программы + 2000 / запуск таймера
    flag = 1;  // выполнить установка значения true(1) для тригера состояния цифрового пина(4)
    flag2 = 1;  // выполнить установка значения true(1) для тригера состояния таймера задержки (включение таймера задержки)
    flag3 = 1;  // выполнить установка значения true(1) для для тригера состояния цифрового пина(4) во время работы таймера задержки
  }

//   Окончание движения
  if (tripped == 0 && flag == 1 && flag2 == 0 && flag3 == 0) {   // Если на цифровом пине появился низкий уровень И тригер тригер состояния цифрового пина(4) имеет значение true(1) И тригер состояния таймера задержки имеет значение false(0)(запущен таймер) И триггер состояния цифрового пина(4) во время работы таймера задержки имеет значение false(0)
    flag = 0;  // выполнить установка значения false(0) для тригера состояния цифрового пина(4)

    Serial.println("END MOTION");  // выполнить передачу в последовательный порт информации о фиксации конца движения - END MOTION
  }

}
